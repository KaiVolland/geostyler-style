{
    "$id": "http://geostyler/geostyler-style.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "Channel": {
            "description": "A Channel defines the properties for a color channel.",
            "properties": {
                "contrastEnhancement": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/ContrastEnhancement",
                    "description": "A ContrastEnhancement defines how the contrast of image data should be enhanced."
                },
                "sourceChannelName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ColorMap": {
            "description": "A ColorMap defines the color values for the pixels of a raster image.",
            "properties": {
                "colorMapEntries": {
                    "items": {
                        "$ref": "http://geostyler/geostyler-style.json#/definitions/ColorMapEntry"
                    },
                    "type": "array"
                },
                "extended": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/ColorMapType"
                }
            },
            "type": "object"
        },
        "ColorMapEntry": {
            "description": "A single entry for the ColorMap.",
            "properties": {
                "color": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "opacity": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ColorMapType": {
            "description": "The Types that are allowed in a ColorMap.",
            "enum": [
                "intervals",
                "ramp",
                "values"
            ],
            "type": "string"
        },
        "CombinationFilter": {
            "additionalItems": {
                "$ref": "http://geostyler/geostyler-style.json#/definitions/Filter"
            },
            "description": "A CombinationFilter combines N Filters with a logical OR / AND operator.",
            "items": [
                {
                    "description": "The possible Operators used for combination Filters.",
                    "enum": [
                        "&&",
                        "||"
                    ],
                    "type": "string"
                }
            ],
            "minItems": 1,
            "type": "array"
        },
        "ContrastEnhancement": {
            "description": "A ContrastEnhancement defines how the contrast of image data should be enhanced.",
            "properties": {
                "enhancementType": {
                    "enum": [
                        "histogram",
                        "normalize"
                    ],
                    "type": "string"
                },
                "gammaValue": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FillSymbolizer": {
            "description": "A FillSymbolizer describes the style representation of POLYGON data.",
            "properties": {
                "antialias": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Whether the fill should be antialiased or not ."
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A color defined as a hex-color string."
                },
                "fillOpacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The opacity of the fill. A value between 0 and 1.\n0 is none opaque and 1 is full opaque."
                },
                "graphicFill": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/MarkSymbolizer"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/TextSymbolizer"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/IconSymbolizer"
                        }
                    ],
                    "description": "Renders the fill of the polygon with a repeated pattern of PointSymbolizer."
                },
                "kind": {
                    "description": "Describes the type of the kind of the Symbolizer.",
                    "enum": [
                        "Fill"
                    ],
                    "type": "string"
                },
                "opacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Determines the total opacity for the Symbolizer.\nA value between 0 and 1. 0 is none opaque and 1 is full opaque."
                },
                "outlineColor": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The outline color as a hex-color string. Matches the value of fill-color if\nunspecified."
                },
                "outlineDasharray": {
                    "description": "Encodes a dash pattern as an array of numbers. Odd-indexed numbers (first,\nthird, etc) determine the length in pixels to draw the line, and even-indexed\nnumbers (second, fourth, etc) determine the length in pixels to blank out\nthe line. Default is an unbroken line.",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "outlineOpacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The opacity of the outline. A value between 0 and 1.\n0 is none opaque and 1 is full opaque."
                },
                "outlineWidth": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The outline width (pixels if outlineWidthUnit is not defined)."
                },
                "outlineWidthUnit": {
                    "description": "Unit to use for the outlineWidth.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "visibility": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Defines whether the Symbolizer should be visibile or not."
                }
            },
            "type": "object"
        },
        "Filter": {
            "anyOf": [
                {
                    "description": "A FunctionFilter that expects an Expression as second and\nthird argument. The function checks, if the evaluation of\nthe second argument matches the evaluation of the third one.\nAn actual parser implementation has to return a value for\nthis function expression.",
                    "items": [
                        {
                            "enum": [
                                "FN_strMatches"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/RegExp"
                        }
                    ],
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array"
                },
                {
                    "description": "A Filter that checks if a property is in a range of two values (inclusive).",
                    "items": [
                        {
                            "enum": [
                                "<=x<="
                            ],
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "description": "A FunctionFilter that expects an Expression as second and\nthird argument. The function checks, if the evaluation of\nthe second argument matches the evaluation of the third one.\nAn actual parser implementation has to return a value for\nthis function expression.",
                                    "items": [
                                        {
                                            "enum": [
                                                "FN_strMatches"
                                            ],
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/RegExp"
                                        }
                                    ],
                                    "maxItems": 3,
                                    "minItems": 3,
                                    "type": "array"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    ],
                    "maxItems": 4,
                    "minItems": 4,
                    "type": "array"
                },
                {
                    "items": [
                        {
                            "description": "The possible Operators used for comparison Filters.",
                            "enum": [
                                "!=",
                                "*=",
                                "<",
                                "<=",
                                "<=x<=",
                                "==",
                                ">",
                                ">="
                            ],
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            ]
                        }
                    ],
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array"
                },
                {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/CombinationFilter"
                },
                {
                    "description": "A NegationFilter negates a given Filter.",
                    "items": [
                        {
                            "enum": [
                                "!"
                            ],
                            "type": "string"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/Filter"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                }
            ]
        },
        "FunctionCall": {
            "description": "Expression that evaluates to the result of a function\ncall on a list of argument expressions.",
            "properties": {
                "args": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                            }
                        ],
                        "description": "Expressions can be a literal value, a property name or a function call."
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "functioncall"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrayChannel": {
            "description": "A GrayChannel defines how a single dataset band is mapped to a grayscale channel.",
            "properties": {
                "grayChannel": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/Channel"
                }
            },
            "type": "object"
        },
        "IconSymbolizer": {
            "description": "An IconSymbolizer describes the style representation of POINT data if styled\nwith a specific icon.",
            "properties": {
                "allowOverlap": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "If true, the icon will be visible even if it collides with other previously\ndrawn symbols."
                },
                "anchor": {
                    "description": "Part of the icon placed closest to the anchor. This may conflict with a set\noffset.",
                    "enum": [
                        "bottom",
                        "bottom-left",
                        "bottom-right",
                        "center",
                        "left",
                        "right",
                        "top",
                        "top-left",
                        "top-right"
                    ],
                    "type": "string"
                },
                "avoidEdges": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "This is a property relevant if using tiled datasets.\nIf true, the symbols will not cross tile edges to avoid mutual collisions."
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A color defined as a hex-color string."
                },
                "format": {
                    "description": "An optional configuration for the image format as MIME type.\nThis might be needed if the image(path) has no filending specified. e.g. http://myserver/getImage",
                    "enum": [
                        "image/gif",
                        "image/jpeg",
                        "image/jpg",
                        "image/png",
                        "image/svg+xml"
                    ],
                    "type": "string"
                },
                "haloBlur": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The halo's fadeout distance towards the outside."
                },
                "haloColor": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The color of the icons halo, which helps it stand out from backgrounds represented\nas a hex-color string."
                },
                "haloWidth": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Distance of halo to the font outline (pixels if haloWidthUnit is not defined)."
                },
                "haloWidthUnit": {
                    "description": "Unit to use for the haloWidth.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "image": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A path/URL to the icon image file."
                },
                "keepUpright": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "If true, the icon will be kept upright."
                },
                "kind": {
                    "description": "Describes the type of the kind of the Symbolizer.",
                    "enum": [
                        "Icon"
                    ],
                    "type": "string"
                },
                "offset": {
                    "description": "The offset of the Symbolizer as [x, y] coordinates. Positive values indicate\nright and down, while negative values indicate left and up.",
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "offsetAnchor": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-icon-translate-anchor",
                    "enum": [
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "opacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Determines the total opacity for the Symbolizer.\nA value between 0 and 1. 0 is none opaque and 1 is full opaque."
                },
                "optional": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Property relevant for mapbox-styles.\nIf true, text will display without their corresponding icons when the icon\ncollides with other symbols and the text does not."
                },
                "padding": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Size of the additional area around the icon used for detecting symbol collisions."
                },
                "pitchAlignment": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#layout-symbol-icon-pitch-alignment",
                    "enum": [
                        "auto",
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "rotate": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The rotation of the Symbolizer in degrees. Value should be between 0 and 360."
                },
                "rotationAlignment": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#layout-symbol-icon-rotation-alignment",
                    "enum": [
                        "auto",
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "size": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The Symbolizer size (pixels if sizeUnit is not defined)."
                },
                "sizeUnit": {
                    "description": "Unit to use for the size.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "textFit": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#layout-symbol-icon-text-fit",
                    "enum": [
                        "both",
                        "height",
                        "none",
                        "width"
                    ],
                    "type": "string"
                },
                "textFitPadding": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#layout-symbol-icon-text-fit-padding",
                    "items": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "maxItems": 4,
                    "minItems": 4,
                    "type": "array"
                },
                "visibility": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Defines whether the Symbolizer should be visibile or not."
                }
            },
            "type": "object"
        },
        "LineSymbolizer": {
            "description": "A LineSymbolizer describes the style representation of LINESTRING data.",
            "properties": {
                "blur": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "cap": {
                    "description": "Determines how lines are rendered at their ends. Possible values are butt\n(sharp square edge), round (rounded edge), and square (slightly elongated\nsquare edge).",
                    "enum": [
                        "butt",
                        "round",
                        "square"
                    ],
                    "type": "string"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A color defined as a hex-color string."
                },
                "dashOffset": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Number of pixels into the dasharray to offset the drawing of the dash,\nused to shift the location of the lines and gaps in a dash."
                },
                "dasharray": {
                    "description": "Encodes a dash pattern as an array of numbers. Odd-indexed numbers (first,\nthird, etc) determine the length in pixels to draw the line, and even-indexed\nnumbers (second, fourth, etc) determine the length in pixels to blank out\nthe line. Default is an unbroken line.",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "gapWidth": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Draws a line casing outside of a line's actual path. Value indicates the\nwidth of the inner gap (pixels if gapWidthUnit is not defined)."
                },
                "gapWidthUnit": {
                    "description": "Unit to use for the gapWidth.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "gradient": {
                    "description": "Defines a gradient with which to color a line feature.",
                    "items": {},
                    "type": "array"
                },
                "graphicFill": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/MarkSymbolizer"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/TextSymbolizer"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/IconSymbolizer"
                        }
                    ],
                    "description": "Renders the pixels of the line with a repeated pattern."
                },
                "graphicStroke": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/MarkSymbolizer"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/TextSymbolizer"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/IconSymbolizer"
                        }
                    ],
                    "description": "Renders the line with a repeated linear PointSymbolizer."
                },
                "join": {
                    "description": "Determines how lines are rendered at intersections of line segments.\nPossible values are mitre (sharp corner),  round (rounded corner), and bevel\ndiagonal corner).",
                    "enum": [
                        "bevel",
                        "miter",
                        "round"
                    ],
                    "type": "string"
                },
                "kind": {
                    "description": "Describes the type of the kind of the Symbolizer.",
                    "enum": [
                        "Line"
                    ],
                    "type": "string"
                },
                "miterLimit": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Used to automatically convert miter joins to bevel joins for sharp angles."
                },
                "opacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Determines the total opacity for the Symbolizer.\nA value between 0 and 1. 0 is none opaque and 1 is full opaque."
                },
                "perpendicularOffset": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "If present, it makes the renderer draw a line parallel to the original one,\nat the given distance. When applied on lines, positive values generate a\nparallel line on the left hand side, negative values on the right hand side."
                },
                "roundLimit": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Used to automatically convert round joins to miter joins for shallow angles."
                },
                "spacing": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Distance between two symbol anchors (pixels if spacingUnit is not defined)."
                },
                "spacingUnit": {
                    "description": "Unit to use for the spacing.\n'em' -> fontsize",
                    "enum": [
                        "em",
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "visibility": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Defines whether the Symbolizer should be visibile or not."
                },
                "width": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The width of the Line (pixels if widthUnit is not defined)."
                },
                "widthUnit": {
                    "description": "Unit to use for the width.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LiteralValue": {
            "description": "Expression that evaluates to the given value.",
            "properties": {
                "type": {
                    "enum": [
                        "literal"
                    ],
                    "type": "string"
                },
                "value": {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "MarkSymbolizer": {
            "description": "MarkSymbolizer describes the style representation of POINT data, if styled as\nwith a regular geometry.",
            "properties": {
                "avoidEdges": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "This is a property relevant if using tiled datasets.\nIf true, the symbols will not cross tile edges to avoid mutual collisions."
                },
                "blur": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Amount to blur the Symbolizer. 1 blurs the Symbolizer such that only the\ncenterpoint has full opacity. Mostly relevant for circles."
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A color defined as a hex-color string."
                },
                "fillOpacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The opacity of the fill. A value between 0 and 1.\n0 is none opaque and 1 is full opaque."
                },
                "kind": {
                    "description": "Describes the type of the kind of the Symbolizer.",
                    "enum": [
                        "Mark"
                    ],
                    "type": "string"
                },
                "offset": {
                    "description": "The offset of the Symbolizer as [x, y] coordinates. Positive values indicate\nright and down, while negative values indicate left and up.",
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "offsetAnchor": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-icon-translate-anchor",
                    "enum": [
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "opacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Determines the total opacity for the Symbolizer.\nA value between 0 and 1. 0 is none opaque and 1 is full opaque."
                },
                "pitchAlignment": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-circle-circle-pitch-alignment",
                    "enum": [
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "pitchScale": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-circle-circle-pitch-scale",
                    "enum": [
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "radius": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The radius of the Symbolizer. Values describing the full size of the Symbolizer\nhave to be divided by two (pixels if radiusUnit is not defined)."
                },
                "radiusUnit": {
                    "description": "Unit to use for the radius.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "rotate": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The rotation of the Symbolizer in degrees. Value should be between 0 and 360."
                },
                "strokeColor": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The color of the stroke represented as a hex-color string."
                },
                "strokeOpacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The opacity of the stroke. A value between 0 and 1.\n0 is none opaque and 1 is full opaque."
                },
                "strokeWidth": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The width of the stroke (pixels if strokeWidthUnit is not defined)."
                },
                "strokeWidthUnit": {
                    "description": "Unit to use for the strokeWidth.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "visibility": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Defines whether the Symbolizer should be visibile or not."
                },
                "wellKnownName": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "enum": [
                                "circle",
                                "cross",
                                "shape://backslash",
                                "shape://carrow",
                                "shape://dot",
                                "shape://horline",
                                "shape://oarrow",
                                "shape://plus",
                                "shape://slash",
                                "shape://times",
                                "shape://vertline",
                                "square",
                                "star",
                                "triangle",
                                "x"
                            ],
                            "type": "string"
                        }
                    ],
                    "description": "The WellKnownName of the MarkSymbolizer."
                }
            },
            "type": "object"
        },
        "NegationFilter": {
            "description": "A NegationFilter negates a given Filter.",
            "items": [
                {
                    "enum": [
                        "!"
                    ],
                    "type": "string"
                },
                {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/Filter"
                }
            ],
            "maxItems": 2,
            "minItems": 2,
            "type": "array"
        },
        "PropertyName": {
            "description": "Expression that evaluates to the value of the given property.",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "property"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RGBChannel": {
            "description": "A RGBChannel defines how dataset bands are mapped to image color channels.",
            "properties": {
                "blueChannel": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/Channel"
                },
                "greenChannel": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/Channel"
                },
                "redChannel": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/Channel"
                }
            },
            "type": "object"
        },
        "RasterSymbolizer": {
            "description": "A RasterSymbolizer defines the style representation of RASTER data.",
            "properties": {
                "brightnessMax": {
                    "type": "number"
                },
                "brightnessMin": {
                    "type": "number"
                },
                "channelSelection": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/RGBChannel"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/GrayChannel"
                        }
                    ]
                },
                "colorMap": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/ColorMap",
                    "description": "A ColorMap defines the color values for the pixels of a raster image."
                },
                "contrast": {
                    "type": "number"
                },
                "contrastEnhancement": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/ContrastEnhancement",
                    "description": "A ContrastEnhancement defines how the contrast of image data should be enhanced."
                },
                "fadeDuration": {
                    "type": "number"
                },
                "hueRotate": {
                    "type": "number"
                },
                "kind": {
                    "enum": [
                        "Raster"
                    ],
                    "type": "string"
                },
                "opacity": {
                    "type": "number"
                },
                "resampling": {
                    "enum": [
                        "linear",
                        "nearest"
                    ],
                    "type": "string"
                },
                "saturation": {
                    "type": "number"
                },
                "visibility": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RegExp": {
            "properties": {
                "dotAll": {
                    "type": "boolean"
                },
                "flags": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "ignoreCase": {
                    "type": "boolean"
                },
                "lastIndex": {
                    "type": "number"
                },
                "multiline": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "sticky": {
                    "type": "boolean"
                },
                "unicode": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Rule": {
            "description": "A Rule combines a specific amount of data (defined by a Filter and a\nScaleDenominator) and an associated Symbolizer.",
            "properties": {
                "filter": {
                    "anyOf": [
                        {
                            "description": "A FunctionFilter that expects an Expression as second and\nthird argument. The function checks, if the evaluation of\nthe second argument matches the evaluation of the third one.\nAn actual parser implementation has to return a value for\nthis function expression.",
                            "items": [
                                {
                                    "enum": [
                                        "FN_strMatches"
                                    ],
                                    "type": "string"
                                },
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/RegExp"
                                }
                            ],
                            "maxItems": 3,
                            "minItems": 3,
                            "type": "array"
                        },
                        {
                            "description": "A Filter that checks if a property is in a range of two values (inclusive).",
                            "items": [
                                {
                                    "enum": [
                                        "<=x<="
                                    ],
                                    "type": "string"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                        },
                                        {
                                            "description": "A FunctionFilter that expects an Expression as second and\nthird argument. The function checks, if the evaluation of\nthe second argument matches the evaluation of the third one.\nAn actual parser implementation has to return a value for\nthis function expression.",
                                            "items": [
                                                {
                                                    "enum": [
                                                        "FN_strMatches"
                                                    ],
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/RegExp"
                                                }
                                            ],
                                            "maxItems": 3,
                                            "minItems": 3,
                                            "type": "array"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "anyOf": [
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                },
                                {
                                    "anyOf": [
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                }
                            ],
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "description": "The possible Operators used for comparison Filters.",
                                    "enum": [
                                        "!=",
                                        "*=",
                                        "<",
                                        "<=",
                                        "<=x<=",
                                        "==",
                                        ">",
                                        ">="
                                    ],
                                    "type": "string"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                        },
                                        {
                                            "type": [
                                                "string",
                                                "number"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "anyOf": [
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                        },
                                        {
                                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                        },
                                        {
                                            "type": [
                                                "string",
                                                "number"
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "maxItems": 3,
                            "minItems": 3,
                            "type": "array"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/CombinationFilter",
                            "description": "A CombinationFilter combines N Filters with a logical OR / AND operator."
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/NegationFilter",
                            "description": "A NegationFilter negates a given Filter."
                        }
                    ]
                },
                "name": {
                    "type": "string"
                },
                "scaleDenominator": {
                    "$ref": "http://geostyler/geostyler-style.json#/definitions/ScaleDenominator",
                    "description": "The ScaleDenominator defines a range of scales."
                },
                "symbolizers": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/MarkSymbolizer"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/TextSymbolizer"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/IconSymbolizer"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/FillSymbolizer"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/LineSymbolizer"
                            },
                            {
                                "$ref": "http://geostyler/geostyler-style.json#/definitions/RasterSymbolizer"
                            }
                        ],
                        "description": "All operators."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ScaleDenominator": {
            "description": "The ScaleDenominator defines a range of scales.",
            "properties": {
                "max": {
                    "description": "Maximum value of the ScaleDenominator. The value is exclusive.",
                    "type": "number"
                },
                "min": {
                    "description": "Minimum value of the ScaleDenominator. The value is inclusive.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TextSymbolizer": {
            "description": "The TextSymbolizer describes the style representation of point data, if styled\nwith a text.",
            "properties": {
                "allowOverlap": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "If true, the text will be visible even if it collides with other previously\ndrawn symbols."
                },
                "anchor": {
                    "description": "The anchor position of the label referred to the center of the geometry.",
                    "enum": [
                        "bottom",
                        "bottom-left",
                        "bottom-right",
                        "center",
                        "left",
                        "right",
                        "top",
                        "top-left",
                        "top-right"
                    ],
                    "type": "string"
                },
                "avoidEdges": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "This is a property relevant if using tiled datasets.\nIf true, the symbols will not cross tile edges to avoid mutual collisions."
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A color defined as a hex-color string."
                },
                "font": {
                    "description": "An Array of fonts. Comparable to https://www.w3schools.com/cssref/pr_font_font-family.asp",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fontStyle": {
                    "description": "Specifies whether a font should be styled with a normal, italic, or oblique\nface from its font-family.",
                    "enum": [
                        "italic",
                        "normal",
                        "oblique"
                    ],
                    "type": "string"
                },
                "fontWeight": {
                    "description": "Specifies the weight (or boldness) of the font. The weights available depend\non the font-family you are using.",
                    "enum": [
                        "bold",
                        "normal"
                    ],
                    "type": "string"
                },
                "haloBlur": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The halo's fadeout distance towards the outside."
                },
                "haloColor": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The color of the text's halo, which helps it stand out from backgrounds\nrepresented as a hex-color string."
                },
                "haloWidth": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Distance of halo to the font outline (pixels if haloWidthUnit is not defined)."
                },
                "haloWidthUnit": {
                    "description": "Unit to use for the haloWidth.",
                    "enum": [
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "justify": {
                    "description": "Text justification option to align the text.",
                    "enum": [
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "keepUpright": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "If true, the text will be kept upright."
                },
                "kind": {
                    "description": "Describes the type of the kind of the Symbolizer.",
                    "enum": [
                        "Text"
                    ],
                    "type": "string"
                },
                "label": {
                    "description": "Template string where {{PROPERTYNAME}} can be used to be replaced by values\nfrom the dataset.\ne.g.: \"Name {{country_name}}\"",
                    "type": "string"
                },
                "letterSpacing": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Sets the spacing between text characters (pixels if letterSpacingUnit is not defined)."
                },
                "letterSpacingUnit": {
                    "description": "Unit to use for the letterSpacing.",
                    "enum": [
                        "em",
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "lineHeight": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Sets the line height (pixels if lineHeightUnit is not defined).\n'em' -> fontsize"
                },
                "lineHeightUnit": {
                    "description": "Unit to use for the lineHeight.\n'em' -> fontsize",
                    "enum": [
                        "em",
                        "m",
                        "px"
                    ],
                    "type": "string"
                },
                "maxAngle": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Maximum angle change between adjacent characters in degrees."
                },
                "maxWidth": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The maximum line width for text wrapping."
                },
                "offset": {
                    "description": "The offset of the Symbolizer as [x, y] coordinates. Positive values indicate\nright and down, while negative values indicate left and up.",
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                                },
                                {
                                    "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "offsetAnchor": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-icon-translate-anchor",
                    "enum": [
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "opacity": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Determines the total opacity for the Symbolizer.\nA value between 0 and 1. 0 is none opaque and 1 is full opaque."
                },
                "optional": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Property relevant for mapbox-styles.\nIf true, icons will display without their corresponding text when the text\ncollides with other symbols and the icon does not."
                },
                "padding": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Size of the additional area around the text bounding box used for detecting\nsymbol collisions."
                },
                "pitchAlignment": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#layout-symbol-text-pitch-alignment",
                    "enum": [
                        "auto",
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "rotate": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The rotation of the Symbolizer in degrees. Value should be between 0 and 360."
                },
                "rotationAlignment": {
                    "description": "Property relevant for mapbox-styles.\nCompare https://docs.mapbox.com/mapbox-gl-js/style-spec/#layout-symbol-text-rotation-alignment",
                    "enum": [
                        "auto",
                        "map",
                        "viewport"
                    ],
                    "type": "string"
                },
                "size": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "The fontsize in pixels."
                },
                "transform": {
                    "description": "Specifies how to capitalize text, similar to the CSS text-transform property.",
                    "enum": [
                        "lowercase",
                        "none",
                        "uppercase"
                    ],
                    "type": "string"
                },
                "visibility": {
                    "anyOf": [
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/LiteralValue"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/PropertyName"
                        },
                        {
                            "$ref": "http://geostyler/geostyler-style.json#/definitions/FunctionCall"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Defines whether the Symbolizer should be visibile or not."
                }
            },
            "type": "object"
        }
    },
    "description": "The Style is the main interface and the root for all other interfaces.",
    "properties": {
        "name": {
            "type": "string"
        },
        "rules": {
            "items": {
                "$ref": "http://geostyler/geostyler-style.json#/definitions/Rule"
            },
            "type": "array"
        }
    },
    "type": "object"
}

